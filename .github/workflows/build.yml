# This workflow builds FTL
# It is analogous to Circle CI workflow here:
# ../../.circleci/config.yml
name: Build and test

on:
  push:
    branches:
     - '*'
  pull_request:

jobs:
  build:

    strategy:
      matrix:
        include:
         - arch: armv4t
           bin_name: pihole-FTL-armv4-linux-gnueabi
         - arch: armv5te
           bin_name: pihole-FTL-armv5-linux-gnueabi
         - arch: armv6hf
           bin_name:  pihole-FTL-armv6-linux-gnueabihf
         - arch: armv7hf
           bin_name: pihole-FTL-armv7-linux-gnueabihf
         - arch: armv8a
           bin_name: pihole-FTL-armv8-linux-gnueabihf
         - arch: aarch64
           bin_name: pihole-FTL-aarch64-linux-gnu
         - arch: x86_64
           bin_name: pihole-FTL-linux-x86_64
         - arch: x86_64-musl
           bin_name: pihole-FTL-musl-linux-x86_64
         - arch: x86_32
           bin_name: pihole-FTL-linux-x86_32

    container: pihole/ftl-build:v1.10-${{ matrix.arch }}

    runs-on: ubuntu-latest
    continue-on-error: true

    steps:
      -
        name: Update git (until we update base image)
        if: ${{ matrix.arch != 'x86_64-musl' }}
        run: |
          echo "deb http://deb.debian.org/debian stretch-backports main contrib non-free" >> /etc/apt/sources.list;
          apt-get update
          apt-get -t stretch-backports install git -y
      -
        name: Checkout code
        uses: actions/checkout@v2
      -
        name: "Build"
        run: |
          # Extract branch name or ref from GITHUB_REF variable
          BRANCH=${GITHUB_REF#refs/*/}
          echo "${BRANCH}"
          bash .circleci/build-CI.sh "-DSTATIC=${STATIC}" "${BRANCH}" "${CIRCLE_TAG}" "${{ matrix.arch }}"
      -
        name: "Binary checks"
        run: |
          export CIRCLE_JOB="${{ matrix.arch }}"
          bash test/arch_test.sh
      -
        name: "Compute checksum"
        run: |
          mv pihole-FTL "${{ matrix.bin_name }}"
          sha1sum pihole-FTL-* > ${{ matrix.bin_name }}.sha1
      -
        name: "Test"
        run: |
            export CIRCLE_JOB="${{ matrix.arch }}"
            mv "${{ matrix.bin_name }}" pihole-FTL
            test/run.sh
      -
        name: "Upload"
        run: |
          echo ${{ github.repository_owner }}
