# This is an example configuration file for pihole-FTL.conf that was
# derived from https://docs.pi-hole.net/ftldns/configfile/.
# 
# Author: Brian Thompson <git@hashvault.io>
# Created: June 25, 2021
#
#####
### DNS settings
#####
##
## How should FTL reply to blocked queries?
#BLOCKINGMODE=NULL|IP-NODATA-AAAA|IP|NXDOMAIN
#
## Use this option to disable deep CNAME inspection.  This might be
## beneficial for very low-end devices.
#CNAME_DEEP_INSPECT=true|false
#
## Encrypted Server Name Indication (ESNI) is certainly a good step into
## the right direction to enhance privacy on the web.  It prevents
## on-path observers, including ISPs, coffee shop owners and firewalls,
## from intercepting the TLS Server Name Indication (SNI) by encrypting
## it.  This prevents the SNI from being used to determine which
## websites users are visiting.
#BLOCK_ESNI=true|false
#
## Should we overwrite the query source when client information is provided
## through EDSN0 client subnet (ESCS) information?  This allows Pi-hole to
## obtain client IPs even if they are hidden behind the NAT of a router.
#EDNS0_ECS=true|false
#
## Control FTL's query rate-limiting.  Rate-limited queries are
## answered with a REFUSED reply and not further processed by FTL.
#RATE_LIMIT=1000/60
##
#####
### Statistics settings
#####
##
## Up to how many hours of queries should be imported from the database
## and logs?  Values greater than the hard-coded maximum of 24h need a
## locally compiled FTL with a changed compile-time value.
#MAXLOGAGE=24.0
#
## Which privacy level is used? (0, 1, 2, or 3)
#PRIVACYLEVEL=0|1|2|3
#
## Should FTL ignore queries coming from the local machine?
#IGNORE_LOCALHOST=no|yes
#
## Should FTL analyze AAAA queries?  The DNS server will handle AAAA
## queries the same way, regardless of this setting.  All this does
## is ignoring AAAA queries when computing the statistics in Pi-hole.
## This setting is considered obsolete and may be removed in a future
## version.
#AAAA_QUERY_ANALYSIS=no/yes
#
## Should FTL only analyze A and AAAA queries?
#ANALYZE_ONLY_A_AND_AAAA=false|true
##
#####
### Other settings
#####
##
## Listen only for local socket connections or permit all connections.
#SOCKET_LISTENING=localonly|all
#
## On which port should FTL be listening?
#FTLPORT=4711
#
## Should FTL try to resolve IPv6 addresses to hostnames?
#RESOLVE_IPV6=yes|no
#
## Should FTL try to resolve IPv4 addresses to hostnames?
#RESOLVE_IPV4=yes|no
#
## In certain configurations, you may want FTL to wait a given amount
## of time before trying to start the DNS resolver.  This is typically
## found when network interfaces appear only late during system startup
## and the interface startup priorities are configure incorrectly.
##
## This setting takes any integer value between 0 and 300 seconds.
#DELAY_STARTUP=0
#
## Can be used to change the niceness of Pi-hole FTL.  Defaults to -10
## and can be disabled altogether by setting a value of -999.
##
## The nice value is an attribute that can be used to influence the
## CPU scheduler to favor or disfavor a process in scheduling decisions.
## The range of the nice value varies across UNIX systems.  On modern
## Linux, the range is -20 (high priority = not very nice to other
## processes) to +19 (low priority).
#NICE=-10
#
## IP addresses (and associated host names) older than the specified
## number of days are removed to avoid dead entries in the network overview
## table.  This setting defaults to the same value as MAXDBDAYS above
## but can be changed independently if needed.
#MAXNETAGE=[MAXDBDAYS]
#
## Control whether FTL should use the fallback option to try to obtain
## client names from checking the network table.  This behavior can
## be disabled with this option.
#NAMES_FROM_NETD8=true|false
#
## With this option, you can change how (and if) hourly PTR requests made
## to check for changes in client and upstream server hostnames.  The
## following options are available:
##
## - IPV4: Do the hourly PTR lookups only for IPv4 addresses.  This is
##   the new default since Pi-hole FTL v5.3.2.  It should resolve issues
##   with more and more very short-lived PE IPv6 addresses coming up in
##   a lot of networks
## - ALL: Do the hourly PTR lookups for all addresses.  This is the same
##   as what we're doing with FTL v5.3(.1).  This can create a lot of
##   PTR queries for those with many IPv6 addresses in their networks.
## - UKNOWN: Only resolve unknown hostnames.  Already existing hostnames
##   are never refreshed.  This also means that known hostnames will not
##   be updated once known.
## - NONE: Don't do any hourly PTR lookups.  This means we look host
##   names up exactly once and never again.  You may miss future
##   changes of host names.
#REFRESH_HOSTNAMES=IPV4|ALL|UKNOWN|NONE
##
#####
### Long-term database settings
#####
##
## Should FTL load information from the database on startup to be
## aware of the most recent history?
#DBIMPORT=yes|no
#
## How long should queries be stored in the database?  Setting this to
## 0 disables the database.
#MAXDBDAYS=365
#
## How often do we store queries in FTL's database [minutes]?
#DBINTERVAL=1.0
#
## Specify the path and filename of FTL's SQLite3 long-term database.
## Setting this to DBFILE= disables the database altogether.
#DBFILE=/etc/pihole/pihole-FTL.db
##
#####
### File options
#####
##
## The location of FTL's log file.  If you want to move the log filet to
## a different place, also consider the FAQ.
#LOGFILE=/var/log/pihole-FTL.log
#
## The file which contains the PID of FTL's main process.
#PIDFILE=/run/pihole-FTL.pid
#
## The file containing the port FTL's API is listening on.
#PORTFILE=/run/pihole-FTL.port
#
## The file containing the socket FTL's API is listening on.
#SOCKETFILE=/run/pihole/FTL.sock
#
## The config file of Pi-hole containing, e.g., the current blocking
## status (do not change).
#SETUPVARSFILE=/etc/pihole/setupVars.conf
#
## The database containing MAC --> Vendor information for the network
## table.
#MACVENDORDB=/etc/pihole/macvendor.db
#
## Specify path and filename of FTL's SQLite3 gravity database.  This
## database contains all domains relevant for Pi-hole's DNS blocking.
#GRAVITYDB=/etc/pihole/gravity.db
#
##
#####
### Debugging options
#####
##
## Enable all debug flags.  If this is set to true, all other debug
## config options are ignored.
#DEBUG_ALL=false|true
#
## Print debugging information about database actions.  This prints
## performed SQL statements as well as some general information such as
## the time it took to store the queries and how many have been saved
## to the database.
#DEBUG_DATABASE=false|true
#
## Prints a list of the detected interfaces on the startup of pihole-FTL.
## Also, prints whether these interfaces are IPv4 or IPv6 interfaces.
#DEBUG_NETWORKING=false|true
#
## Print debugging information about received EDNS(0) data.
#DEBUG_EDNS0=false|true
#
## Print information about shared memory locks.  Messages will be generated
## when waiting, obtaining, and releasing a lock.
#DEBUG_LOCKS=false|true
#
## Print extensive query information (domains, types, replies, etc.).
## This has always been part of the legacy debug mode of pihole-FTL.
#DEBUG_QUERIES=false|true
#
## Print flags of queries received by the DNS hooks.  Only effective
## when DEBUG_QUERIES is enabled as well.
#DEBUG_FLAGS=false|true
#
## Print information about shared memory buffers.  Messages are either
## about creating or enlarging shmem objects or string injections.
#DEBUG_SHMEM=false|true
#
## Print information about garbage collection (GC): what is to be removed,
## how many have been removed and how long did GC take.
#DEBUG_GC=false|true
#
## Print information about ARP table processing: How long did parsing
## take, whether read MAC addresses are valid, and if the macvendor.db
## file exists.
#DEBUG_ARP=false|true
#
## Control if FTLDNS should print extended details about regex matching
## into pihole-FTL.log.  Due to legacy reasons, we also support the
## following setting to be used for enabling the same functionality:
##
## REGEX_DEBUGMODE=false|true
##
## Note that if one of them is set to true, the other one cannot be
## used to disable this setting again.
#DEBUG_REGEX=false|true
#
## Print extra debugging information during telnet API calls.  Currently
## only used to send extra information when getting all queries.
#DEBUG_API=false|true
#
## Print information about overTime memory operations such as initializing
## or moving overTime slots.
#DEBUG_OVERTIME=false|true
#
## Print information about why FTL decided that certain queries were 
## recognized as being externally blocked.
#DEBUG_EXTBLOCKED=false|true
#
## Print information about capabilities granted to the pihole-FTL
## process.  The current capabilities are printed on receipt of SIGHUP,
## i.e., the current set of capabilities can be queried without restarting
## pihole-FTL (by setting DEBUG_CAPS=true and thereafter sending
## `killall -HUP pihole-FTL).
#DEBUG_CAPS=false|true
#
## Print file and line causing dnsmasq event into FTL's log files.  This
## is handy to implement additional hooks missing from FTL.
#DEBUG_DNSMASQ_LINES=false|true
#
## FTL uses dynamically allocated vectors for various tasks.  This config
## option enables extensive debugging information such as about allocation,
## referencing, deletion, and appending.
#DEBUG_VECTORS=false|true
#
## Extensive information about hostname resolution like which DNS servers
## are used in the first and second hostname resolving tries (only
## affecting internally generated PTR queries).
#DEBUG_RESOLVER=false|true

